!function(l){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=l(),module.exports.loggerJs=function(){return console.warn('Deprecated: please use require("loggerJs.js") directly, instead of the logger method of the function'),l().apply(this,arguments)};else if("function"==typeof define&&define.amd)define([],l);else{let o;(o="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).loggerJs=l()}}(function(){const l={TYPES_FLAT:["string","number","bigint","symbol","boolean"],TYPES_EMPTY:["null","undefined"],TYPES_OBJECT:["object","function"],START:0,END:1,RESET:2,MARK:3,COLLAPSED:4,LEVEL_OFF:0,LEVEL_FATAL:1,LEVEL_ERROR:2,LEVEL_WARN:3,LEVEL_INFO:4,LEVEL_DEBUG:5,LEVEL_TRACE:6,LEVEL_ALL:7,ASSERT_OFF:!1,ASSERT_ON:!0,FMT_DELIMITER:" : "};function o(o){this._options={logLevel:l.LEVEL_INFO,className:null,methodName:null,logMsg:"",logObj:null,debugLevel:b.consts.LEVEL_ALL,assertToggle:b.consts.ASSERT_ON};for(let l in o)this._options[l]=o[l]}let e=function(){let l={};return function(o,e){return l[e=e||"introjs-stamp"]=l[e]||0,void 0===o[e]&&(o[e]=l[e]++),o[e]}}();function s(l,o){if(window.console)switch(l){case b.consts.START:console.count(o.logLabel);break;case b.consts.RESET:console.countReset(o.logLabel)}}function n(l,o){if(u(o,"LEVEL_ALL")&&window.console)switch(l){case b.consts.START:console.group(o.logLabel);break;case b.consts.COLLAPSED:case b.consts.END:console.groupEnd(o.logLabel)}}function t(l,o){if(u(o,"LEVEL_ALL")&&window.console)switch(l){case b.consts.START:console.profile(o.logLabel);break;case b.consts.END:console.profileEnd(o.logLabel);break;case b.consts.MARK:console.timeStamp(o.logLabel)}}function c(l,o){if(u(o,"LEVEL_ALL")&&window.console)switch(l){case b.consts.START:console.time(o.logLabel);break;case b.consts.END:console.timeEnd(o.logLabel);break;case b.consts.MARK:console.timeLog(o.logLabel)}}function r(o){if(u(o,"LEVEL_FATAL")&&window.console)switch(o.logLevel){case"assert":o.assertToggle==b.consts.ASSERT_ON&&(null!=o.logObjs?console.assert(o.assert,o.logObjs[0],o.logObjs[1],o.logObjs[2]):console.assert(o.assert,E("TYPES_FLAT",o.logMsg)?o.logMsg:o.logObj));case"debug":u(o,"LEVEL_DEBUG")&&(null!=o.logObjs?console.debug(o.assert,o.logObjs[0],o.logObjs[1],o.logObjs[2]):console.debug(o.assert,E("TYPES_FLAT",o.logMsg)?o.logMsg:o.logObj));break;case"error":u(o,"LEVEL_ERROR")&&(null!=o.logObjs?console.error(o.assert,o.logObjs[0],o.logObjs[1],o.logObjs[2]):console.error(o.assert,E("TYPES_FLAT",o.logMsg)?o.logMsg:o.logObj));break;case"info":u(o,"LEVEL_INFO")&&(null!=o.logObjs?console.info(o.assert,o.logObjs[0],o.logObjs[1],o.logObjs[2]):console.info(o.assert,E("TYPES_FLAT",o.logMsg)?o.logMsg:o.logObj));break;case"dir":u(o,"LEVEL_ALL")&&!E("TYPES_EMPTY",console.dir)?console.dir(o.logObj):r({debugLevel:l.LEVEL_ERROR,logMsg:"console.dir could not be executed"});break;case"dirxml":u(o,"LEVEL_ALL")&&!E("TYPES_EMPTY",console.dirxml)?console.dirxml(o.logObj):r({debugLevel:l.LEVEL_ERROR,logMsg:"console.dirxml could not be executed"});break;case"table":u(o,"LEVEL_ALL")&&!E("TYPES_EMPTY",console.table)?console.table(o.logObj):r({debugLevel:l.LEVEL_ERROR,logMsg:"console.table could not be executed"});break;case"warn":u(o,"LEVEL_WARN")&&(null!=o.logObjs?console.warn(o.assert,o.logObjs[0],o.logObjs[1],o.logObjs[2]):console.warn(o.assert,E("TYPES_FLAT",o.logMsg)?o.logMsg:o.logObj));break;case"log":default:u(o,"LEVEL_FATAL")&&(null!=o.logObjs?console.log(o.assert,o.logObjs[0],o.logObjs[1],o.logObjs[2]):console.log(o.assert,E("TYPES_FLAT",o.logMsg)?o.logMsg:o.logObj))}}function g(l,o){let e="";return null!=l.logLabel&&(e+=l.logLabel),null!=l.className&&(e+=(""!=e?b.consts.FMT_DELIMITER:"")+l.className),null!=l.methodName&&(e+=(""!=e?b.consts.FMT_DELIMITER:"")+l.methodName),e+=(""!=e?b.consts.FMT_DELIMITER:"")+o}function a(l,o,e,s=null){return null==s&&(s=l._options),s[o]=e,s}function i(l,o,e=null){null==e&&(e=l._options);for(let l in o)e[l]=o[l];return e}function u(l,o){return l.debugLevel>=b.consts[o]}function E(l,o){return b.consts[l].includes(typeof o)}function L(l,o){return E("TYPES_FLAT",o.arg1)?(E("TYPES_FLAT",o.arg2)?l=a(this,"className",o.arg2,l):E("TYPES_OBJECT",o.arg2)&&(l=a(this,"className",function(l){if(null==l)return"Null";const o=/function (.{1,})\(/.exec(l.constructor.toString());return o&&o.length>1?o[1]:""}(o.arg2),l)),E("TYPES_FLAT",o.arg3)?l=a(this,"methodName",o.arg3,l):E("TYPES_OBJECT",o.arg3)&&(l=a(this,"methodName",o.caller,l)),l=a(this,"logMsg",g(l,o.arg1),l)):l=E("TYPES_EMPTY",o.arg2)?a(this,"logObj",o.arg1,l):a(this,"logObjs",[o.arg1,o.arg2],l),l}let b=function(l){let s;if("object"==typeof targetElm)s=new o(l);else if("string"==typeof l){s=new o({logLabel:l})}else s=new o;return b.instances[e(s,"introjs-instance")]=s,s};return b.version="1.0.0",b.consts=l,b.instances={},b.fn=o.prototype={assert:function(l,o,e=null,s=null){let n=i(this,{logLevel:"debug",assert:l});n=L(n,{arg1:o,arg2:e,arg3:s,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}),_Logger_Assert(n)},clear:function(){window.console&&console.clear()},clone:function(){return new o},count:function(l){const o=a(this,"logLabel",l);s(b.consts.START,o)},countReset:function(){const l=a(this,"logLabel",label);s(b.consts.RESET,l)},debug:function(l,o=null,e=null){let s=a(this,"logLevel","debug");r(s=L(s,{arg1:l,arg2:o,arg3:e,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}))},dir:function(l){let o=a(this,"logLevel","dir");r(o=L(o,{logObj:l,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}))},dirxml:function(l){r(a(this,"logObj",l))},error:function(l,o=null,e=null){let s=a(this,"logLevel","error");r(s=L(s,{arg1:l,arg2:o,arg3:e,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}))},exception:function(l,o=null,e=null){this.error(l,o,e)},group:function(){const l=a(this,"logLabel",label);n(b.consts.START,l)},groupCollapsed:function(l){const o=a(this,"logLabel",l);n(b.consts.COLLAPSED,o)},groupEnd:function(l){const o=a(this,"logLabel",l);n(b.consts.END,o)},info:function(l,o=null,e=null){let s=a(this,"logLevel","info");r(s=L(s,{arg1:l,arg2:o,arg3:e,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}))},log:function(l,o=null,e=null){let s=a(this,"logLevel","log");r(s=L(s,{arg1:l,arg2:o,arg3:e,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}))},profile:function(){t(b.consts.START)},profileEnd:function(){t(b.consts.END)},table:function(l){r(i(this,{logLevel:"table",logObj:l}))},time:function(l){const o=a(this,"logLabel",l);c(b.consts.START,o)},timeEnd:function(l){const o=a(this,"logLabel",l);c(b.consts.END,o)},timeLog:function(l){const o=a(this,"logLabel",l);c(b.consts.LOG,o)},timeStamp:function(){t(b.consts.STAMP)},trace:function(l){let o=a(this,"logLevel","trace");E("TYPES_FLAT",l)&&(o=a(this,"logMsg",g(o,l),o)),E("TYPES_OBJECT",l)&&(o=a(this,"logObj",l,o)),r(o)},warn:function(l,o=null,e=null){let s=a(this,"logLevel","warn");r(s=L(s,{arg1:l,arg2:o,arg3:e,caller:E("TYPES_EMPTY",this.caller)?null:this.caller}))}},b});